name: CI/CD Pipeline

on:
  # Combined push triggers with filters
  push:
    branches:
      - "feature/**"
      - "development"
      - "main"
    paths-ignore:
      - "docs/**"
      - "**.md"

  # Trigger full checks when PR is created to development
  pull_request:
    branches: [development]

jobs:
  # STAGE 1: Fast checks for feature branch pushes
  fast-checks:
    name: Fast Checks (Lint Only)
    if: contains(github.ref, 'feature/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: Install dependencies
        run: npm install

      - name: Run ESLint
        run: npm run lint

  # STAGE 2: Full validation for PRs
  full-checks:
    name: Full Validation
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: CodeQL Security Scan
        uses: github/codeql-action@v3
        with:
          languages: "javascript-typescript"
          queries: security-extended

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Run Linter
        run: npm run lint

      - name: Check for tests
        id: check-tests
        run: |
          if grep -q '"test"' package.json; then
            echo "has_tests=true" >> $GITHUB_OUTPUT
          fi

      - name: Run tests
        if: steps.check-tests.outputs.has_tests == 'true'
        run: npm test

      - name: Build verification
        run: npm run build
        env:
          NEXT_PUBLIC_ENV: preview

  # STAGE 3: Deployments
  deploy-staging:
    name: Deploy to Staging
    needs: full-checks
    if: github.ref == 'refs/heads/development' && success()
    runs-on: ubuntu-latest
    environment: "staging" # Must be string and pre-configured in GitHub
    steps:
      - uses: actions/checkout@v4
      - uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: "--prod"
          github-comment: true

  deploy-production:
    name: Deploy to Production
    needs: full-checks
    if: github.ref == 'refs/heads/main' && success()
    runs-on: ubuntu-latest
    environment: "production" # Must be string and pre-configured in GitHub
    steps:
      - uses: actions/checkout@v4
      - uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: "--prod"
