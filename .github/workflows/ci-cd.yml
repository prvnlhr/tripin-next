name: CI/CD Pipeline

on:
  push:
    branches: ["development", "main"]
  pull_request:
    branches: ["development"]

jobs:
  codeql-analysis:
    name: CodeQL Security Scan
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: github/codeql-action/init@v3
        with:
          languages: "javascript-typescript"
          queries: security-extended
      - uses: github/codeql-action/analyze@v3
        with:
          category: "security-scan"

  quality-checks:
    name: Quality Gate
    runs-on: ubuntu-latest
    needs: codeql-analysis
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"

      # Dependency Audit - ONLY RUNS ON PRs
      - name: Dependency Review
        if: github.event_name == 'pull_request'
        uses: actions/dependency-review-action@v3
        with:
          fail-on-severity: high

      # Cache and install
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            .next/cache
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      # Linting
      - name: Run ESLint
        run: npm run lint

      # Optional Testing
      - name: Check for Test Script
        id: check-test
        run: |
          if grep -q '"test"' package.json; then
            echo "test_script_exists=true" >> $GITHUB_OUTPUT
          else
            echo "test_script_exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Run Tests
        if: steps.check-test.outputs.test_script_exists == 'true'
        run: "npm run test -- --ci || echo 'Warning: Tests failed - continuing'"

      - name: Build Application
        run: npm run build
        env:
          STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}

      # Artifact for PRs
      - name: Upload Build Artifact
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: nextjs-build
          path: .next

  deploy:
    name: Deploy to Vercel
    needs: quality-checks
    if: github.ref == 'refs/heads/development' || github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          scope: ${{ secrets.VERCEL_ORG_ID }}
          working-directory: ./
          vercel-args: "--prod"
          github-comment: false
          github-deployment: false
